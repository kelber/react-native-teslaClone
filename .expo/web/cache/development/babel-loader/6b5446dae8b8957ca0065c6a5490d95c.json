{"ast":null,"code":"import * as React from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Pressable from \"react-native-web/dist/exports/Pressable\";\nimport styles from \"./styles\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport function StyledButton(props) {\n  var type = props.type;\n  var backgroundColor = type === \"primary\" ? \"#171A20CC\" : \"#FFFFFFA6\";\n  var textColor = type === \"primary\" ? \"#fff\" : \"#171A20\";\n  return _jsx(View, {\n    style: styles.container,\n    children: _jsx(Pressable, {\n      style: [styles.button, {\n        backgroundColor: backgroundColor\n      }],\n      onPress: function onPress() {\n        console.warn(\"Button pressed\");\n      },\n      children: _jsx(Text, {\n        style: [styles.text, {\n          color: textColor\n        }],\n        children: \"Custom Order\"\n      })\n    })\n  });\n}","map":{"version":3,"sources":["C:/Users/opah/apps/2022/MOBILE/NOTJUSTDEV/teslaClone/components/StyledButton/index.tsx"],"names":["React","styles","StyledButton","props","type","backgroundColor","textColor","container","button","console","warn","text","color"],"mappings":"AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;;;;AAEA,OAAOC,MAAP;;AAEA,OAAO,SAASC,YAAT,CAAsBC,KAAtB,EAAkC;AAGrC,MAAMC,IAAI,GAAGD,KAAK,CAACC,IAAnB;AAIA,MAAMC,eAAe,GAAGD,IAAI,KAAK,SAAT,GAAqB,WAArB,GAAmC,WAA3D;AACA,MAAME,SAAS,GAAGF,IAAI,KAAK,SAAT,GAAqB,MAArB,GAA8B,SAAhD;AAEF,SACE,KAAC,IAAD;AAAM,IAAA,KAAK,EAAEH,MAAM,CAACM,SAApB;AAAA,cACE,KAAC,SAAD;AACE,MAAA,KAAK,EAAG,CAACN,MAAM,CAACO,MAAR,EAAgB;AAACH,QAAAA,eAAe,EAAEA;AAAlB,OAAhB,CADV;AAEE,MAAA,OAAO,EAAE,mBAAM;AACXI,QAAAA,OAAO,CAACC,IAAR,CAAa,gBAAb;AACH,OAJH;AAAA,gBAOI,KAAC,IAAD;AAAM,QAAA,KAAK,EAAG,CAACT,MAAM,CAACU,IAAR,EAAc;AAACC,UAAAA,KAAK,EAAEN;AAAR,SAAd,CAAd;AAAA;AAAA;AAPJ;AADF,IADF;AAeD","sourcesContent":["import * as React from \"react\";\r\nimport { View, Text, Pressable } from \"react-native\";\r\nimport styles from \"./styles\";\r\n\r\nexport function StyledButton(props: any) {\r\n\r\n    // props\r\n    const type = props.type;\r\n    // console.warn(type);\r\n\r\n    // colors for the button\r\n    const backgroundColor = type === \"primary\" ? \"#171A20CC\" : \"#FFFFFFA6\";\r\n    const textColor = type === \"primary\" ? \"#fff\" : \"#171A20\";\r\n\r\n  return (\r\n    <View style={styles.container}>\r\n      <Pressable\r\n        style={ [styles.button, {backgroundColor: backgroundColor }] }\r\n        onPress={() => {\r\n            console.warn(\"Button pressed\");\r\n        }}\r\n      >\r\n\r\n          <Text style={ [styles.text, {color: textColor} ]}>Custom Order</Text>\r\n\r\n\r\n      </Pressable>\r\n    </View>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}